
Topics:

  1. Deployment with react-router-dom, please follow below instructions, 
  
    Publishing Applications with different page routings

    including _redirects file with below contents,

      /* /index.html 200

      include it in public folder

      only then the pages will work properly, else it won't
  
  2. Using Fetch for API requests
      CRUD:
        Read - GET
            Reading the all the data from the Server
        Create - POST
        Update - PUT/PATCH
        Delete - DELETE

      Sample Application:
        Product Listing - Done
        Product Creation - Done
        Product Update - 
        Product Deletion - Done

      Listing:
        Simple UI which will show all the products in flex-box

      Creation:
        Form - Pop-Up
          title
          qty
          price
          image
        
        create new id with some machnism like Date.now()
      
      Updation:

        Again open the pop up with same form with pre-loaded values

        update the values and submit the form to update a particular product
      
      Delete:

        Deleting a single product
      


  3. Implementing CRUD operations using Fetch - Done

  4. Axios vs Fetch

      Axios - separate library which helps in handling API requests and other API related operations

        Instance: axios allows to keep multiple instances ( Multiple server instances )
          Take an Example Amazon:

            products.amazon.in - used to retrieve all the products
            payments.amazon.in - used to handle the payments
            carts.amazon.in - used to handle the carts

        It uses XHR for api interaction

        Reduces the JSON.stringfy and JSON.parsing ( response.json() )

        Interceptors:
          added advantage where we can intercept both request & response

      Fetch - JavaScript inbuilt API/fetch for handling API requests & other API related operations

      Fetch is also capable of doing all the things that axios can do

      But axios do those in a simpler way

Next Session:
  5. React Advanced:

    Optimization Techniques to Improve the performance

      memo:

      useCallback:
        to avoid un-necessary re-renders/rendering

      useMemo:
        https://react.dev/reference/react/useMemo
    
      lazy and suspense

Task:

  Day - 27: https://docs.google.com/document/d/1-qvT8VkH2Bvv16hYm-qNiwfusRSt9ACJmceJLpLV9x8/edi
  use mock-api or the api in the task sheet

  Note: use mock-api if Your using the flow discussed in the session